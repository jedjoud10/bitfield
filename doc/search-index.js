var searchIndex = JSON.parse('{\
"lib":{"doc":"","tn":["AtomicSparseBitfield","Bitfield","SparseBitfield","add","add","add","add","add","add","add","add","add","add","add","add","bitfield","bitfield","bitfield","bitfield","bitfield","bitfield","bitfield","bitfield","bitfield","bitfield","bitfield","bitfield","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone_into","cmp","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","default","default","default","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","fmt","fmt","from","from","from","from_bools","from_bools","from_num","from_num","from_num","from_num","from_num","from_num","from_num","from_num","from_num","from_num","from_num","from_num","get","get","hash","impl_bitfield","increment","increment","increment","increment","increment","increment","increment","increment","increment","increment","increment","increment","into","into","into","ne","new","new","new","new","new","new","new","new","new","new","new","new","new_one","new_one","new_one","new_one","new_one","new_one","new_one","new_one","new_one","new_one","new_one","new_one","partial_cmp","read","read","read","read","read","read","read","read","read","read","read","read","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","set","set","set_inner","set_inner","set_inner","set_inner","set_inner","set_inner","set_inner","set_inner","set_inner","set_inner","set_inner","set_inner","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","with_capacity","write","write","write","write","write","write","write","write","write","write","write","write"],"q":["lib","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An atomic sparse bitfield that can only be used to set …","A simple bitfield that contains a generic","A sparse bitfield that can only be used to set bits …","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Add two bitfields together","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","Get a reference to the simple bitfield’s bitfield","","","","","","","Clear all the bits in this sparse bitfield","Clear all the bits in this sparse bitfield","","","","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","","","","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","Check if the bitfield is empty","","","","","","","Create a new atomic sparse bitfield using an array of bools","Create a new atomic sparse bitfield using an array of bools","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Create a bitfield from the number literal","Get a bit at a specific location","Get a bit at a specific location","","","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","Increment the current bitfield (Shift to the left)","","","","","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a new empty bitfield","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","Create a bitfield with a single set bit at the start","","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Read the bit at the specifed position","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Remove a bitfield from another bitfield","Set the bit at a specific location, if that location does …","Set the bit at a specific location, if that location does …","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","Set the bitfield’s inner bitfield.","","","","","","","","","","","","Create a new empty atomic sparse bitfield with a specified …","Create a new empty atomic sparse bitfield with a specified …","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position","Set the bit at the specified position"],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,2,3,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,0,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,2,3,1,2,3,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,[[["",0],["",0]],["bitfield",3,[["u128",0]]]],[[["",0],["",0]],["bitfield",3,[["i32",0]]]],[[["",0],["",0]],["bitfield",3,[["u32",0]]]],[[["",0],["",0]],["bitfield",3,[["u16",0]]]],[[["",0],["",0]],["bitfield",3,[["u64",0]]]],[[["",0],["",0]],["bitfield",3,[["i128",0]]]],[[["",0],["",0]],["bitfield",3,[["isize",0]]]],[[["",0],["",0]],["bitfield",3,[["u8",0]]]],[[["",0],["",0]],["bitfield",3,[["i8",0]]]],[[["",0],["",0]],["bitfield",3,[["i16",0]]]],[[["",0],["",0]],["bitfield",3,[["i64",0]]]],[[["",0],["",0]],["bitfield",3,[["usize",0]]]],[[["",0]],["u16",0]],[[["",0]],["i16",0]],[[["",0]],["u64",0]],[[["",0]],["i128",0]],[[["",0]],["u32",0]],[[["",0]],["isize",0]],[[["",0]],["u128",0]],[[["",0]],["i8",0]],[[["",0]],["i32",0]],[[["",0]],["u8",0]],[[["",0]],["i64",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]],["bitfield",3]],[[["",0],["",0]]],[[["",0],["bitfield",3]],["ordering",4]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[],["atomicsparsebitfield",3]],[[],["sparsebitfield",3]],[[],["bitfield",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["bitfield",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["u16",0]]],[[["u128",0]]],[[["u32",0]]],[[["isize",0]]],[[["i16",0]]],[[["i64",0]]],[[["i8",0]]],[[["usize",0]]],[[["i128",0]]],[[["i32",0]]],[[["u64",0]]],[[["u8",0]]],[[["",0],["u64",0]],["bool",0]],[[["",0],["u64",0]],["bool",0]],[[["",0],["",0]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[]],[[]],[[["",0],["bitfield",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["bitfield",3]],["option",4,[["ordering",4]]]],[[["",0],["u64",0]],["bool",0]],[[["",0],["i128",0]],["bool",0]],[[["",0],["isize",0]],["bool",0]],[[["",0],["i64",0]],["bool",0]],[[["",0],["u8",0]],["bool",0]],[[["",0],["u16",0]],["bool",0]],[[["",0],["i32",0]],["bool",0]],[[["",0],["u128",0]],["bool",0]],[[["",0],["u32",0]],["bool",0]],[[["",0],["i16",0]],["bool",0]],[[["",0],["i8",0]],["bool",0]],[[["",0],["usize",0]],["bool",0]],[[["",0],["",0]],["option",4,[["bitfield",3,[["u64",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["i16",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["isize",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["i8",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["u8",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["i128",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["u128",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["i64",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["u16",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["i32",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["usize",0]]]]]],[[["",0],["",0]],["option",4,[["bitfield",3,[["u32",0]]]]]],[[["",0],["u64",0],["bool",0]]],[[["",0],["u64",0],["bool",0]]],[[["",0],["u8",0]]],[[["",0],["isize",0]]],[[["",0],["u32",0]]],[[["",0],["i16",0]]],[[["",0],["u128",0]]],[[["",0],["i128",0]]],[[["",0],["i64",0]]],[[["",0],["u16",0]]],[[["",0],["u64",0]]],[[["",0],["i32",0]]],[[["",0],["usize",0]]],[[["",0],["i8",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["u64",0]]],[[["u64",0]]],[[["",0],["u64",0],["bool",0]]],[[["",0],["i128",0],["bool",0]]],[[["",0],["u8",0],["bool",0]]],[[["",0],["i64",0],["bool",0]]],[[["",0],["u32",0],["bool",0]]],[[["",0],["i32",0],["bool",0]]],[[["",0],["usize",0],["bool",0]]],[[["",0],["u16",0],["bool",0]]],[[["",0],["i16",0],["bool",0]]],[[["",0],["i8",0],["bool",0]]],[[["",0],["u128",0],["bool",0]]],[[["",0],["isize",0],["bool",0]]]],"p":[[3,"Bitfield"],[3,"AtomicSparseBitfield"],[3,"SparseBitfield"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};