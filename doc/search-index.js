var searchIndex = JSON.parse('{\
"lib":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AtomicSparseBitfield","Bitfield","add","bitfield","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","contains","default","empty","eq","fmt","fmt","from","from","from_bools","from_num","get","hash","increment","into","into","ne","new","new","new_one","partial_cmp","remove","set","set_bitfield","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["lib","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An atomic sparse bitfield that can only be used to set …","A simple bitfield that contains a generic","Add two bitfields together","Get a reference to the simple bitfield’s bitfield","","","","","","","","Check if <em>self</em> contains some bits from <em>other</em>. It doesn’t …","","Check if the bitfield is empty","","","","","","Create a new atomic sparse bitfield using an array of bools","Create a bitfield from the number literal","Get a bit at a specific location","","Increment the current bitfield (Shift to the left)","","","","Create a new empty atomic sparse bitfield","Create a new empty bitfield","Create a bitfield with a single set bit at the start","","Remove a bitfield from another bitfield","Set the bit at a specific location, if that location does …","Set the bitfield’s bitfield.","","","","","","","",""],"i":[0,0,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,1,2,1,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1],"f":[null,null,[[],["bitfield",3]],[[]],[[]],[[]],[[]],[[]],[[],["bitfield",3]],[[]],[[["bitfield",3]],["ordering",4]],[[],["bool",15]],[[],["bitfield",3]],[[],["bool",15]],[[["bitfield",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u64",15]],["bool",15]],[[]],[[]],[[]],[[]],[[["bitfield",3]],["bool",15]],[[]],[[]],[[]],[[["bitfield",3]],["option",4,[["ordering",4]]]],[[],["bitfield",3]],[[["u64",15],["bool",15]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Bitfield"],[3,"AtomicSparseBitfield"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};